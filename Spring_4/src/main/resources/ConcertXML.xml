<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--开启自动扫描-->
    <context:component-scan base-package="Concert" />

    <!--启用AspectJ自动代理-->
    <aop:aspectj-autoproxy />

    <!--声明Audience切面Bean-->
    <bean id="audience" class="Concert.Audience" />

    <!--声明EncoreableIntroducer切面Bean-->
    <bean class="Concert.EncoreableIntroducer" />

    <!--&lt;!&ndash;通过XML将Audience声明为一个切面&ndash;&gt;-->
    <!--<aop:config>-->
        <!--<aop:aspect ref="audience">-->
            <!--&lt;!&ndash;定义前置通知(表演之前)&ndash;&gt;-->
            <!--<aop:before pointcut="execution(* Concert.Performance.perform(..))"-->
                        <!--method="silenceCellPhone" />-->
            <!--<aop:before pointcut="execution(* Concert.Performance.perform(..))"-->
                        <!--method="takeSeats" />-->
            <!--&lt;!&ndash;定义后置通知(表演之后)&ndash;&gt;-->
            <!--<aop:after-returning pointcut="execution(* Concert.Performance.perform(..))"-->
                                 <!--method="applause" />-->
            <!--&lt;!&ndash;定义异常通知(表演失败之后)&ndash;&gt;-->
            <!--<aop:after-throwing pointcut="execution(* Concert.Performance.perform(..))"-->
                                <!--method="demandRefund" />-->
        <!--</aop:aspect>-->
    <!--</aop:config>-->

    <!--使用<aop:pointcut>元素来声明可重用的切点-->
    <aop:config>
        <aop:pointcut id="performance"
                      expression="execution(* Concert.Performance.perform(..))" />
        <aop:aspect>
            <aop:before pointcut-ref="performance"
                        method="silenceCellphone" />
            <aop:before pointcut-ref="performance"
                        method="takeSeats" />
            <aop:after-returning pointcut-ref="performance"
                                 method="applause" />
            <aop:after-throwing pointcut-ref="performance"
                                method="demandRefund" />
        </aop:aspect>
    </aop:config>

    <!--使用<aop:around>元素声明环绕通知切面-->
    <aop:config>
        <aop:pointcut id="performance"
                      expression="execution(* Concert.Performance.perform(..))" />
        <aop:aspect>
            <aop:around pointcut-ref="performance" method="watchPerformance" />
        </aop:aspect>
    </aop:config>

    <!--在XML中通过切面引入新功能-->
    <aop:config>
        <aop:aspect>
            <aop:declare-parents types-matching="Concert.Performance+"
                                 implement-interface="Concert.Encoreable"
                                 default-impl="Concert.DefaultEncoreable" />
        </aop:aspect>
    </aop:config>

    <!--使用<delegate-ref>属性来引用一个Bean来作为引入的委托-->
    <bean id="encoreableDelegate" class="Concert.DefaultEncoreable" />
    <aop:config>
        <aop:aspect>
            <aop:declare-parents types-matching="Concert.Performance+"
                                 implement-interface="Concert.Encoreable"
                                 delegate-ref="encoreableDelegate" />
        </aop:aspect>
    </aop:config>

    <!--在XML中装配ASpectJ切面-->
    <bean id="criticismEngine" class="Concert.CriticismEngineImpl">
        <property name="criticismPool">
            <list>
                <value>个别演员的表情需要更丰富一点!</value>
                <value>背景音乐太难听了!</value>
                <value>演员肢体动作太僵硬!</value>
                <value>服装太丑了!</value>
            </list>
        </property>
    </bean>

    <bean class="Concert.CriticAspect" factory-method="aspectOf">
        <property name="criticismEngine" ref="criticismEngine" />
    </bean>

</beans>